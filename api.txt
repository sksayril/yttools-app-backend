# YouTube Monetization Platform API Documentation

## Base URL
For local development: http://localhost:3000

## Authentication
Most endpoints require authentication with a JWT token.
Include the token in the request header: `Authorization: Bearer {your_token}`

## 1. User Authentication APIs

### 1.1 Sign Up
- **URL**: `/signup`
- **Method**: POST
- **Request Body**:
```json
{
  "FirstName": "John",
  "LastName": "Doe",
  "Email": "john@example.com",
  "Password": "password123",
  "PetName": "Rex",
  "FatherName": "David"
}
```
- **Response**:
```json
{
  "message": "User registered successfully",
  "data": {
    "id": "user_id",
    "FirstName": "John",
    "LastName": "Doe",
    "Email": "john@example.com"
  }
}
```

### 1.2 Sign In
- **URL**: `/signin`
- **Method**: POST
- **Request Body**:
```json
{
  "Email": "john@example.com",
  "Password": "password123"
}
```
- **Response**:
```json
{
  "message": "Login successful",
  "token": "jwt_token",
  "user": {
    "id": "user_id",
    "FirstName": "John",
    "LastName": "Doe",
    "Email": "john@example.com"
  }
}
```

### 1.3 Forgot Password
- **URL**: `/forgotPassword`
- **Method**: POST
- **Request Body**:
```json
{
  "Email": "john@example.com",
  "PetName": "Rex",
  "FatherName": "David",
  "newPassword": "newpassword123"
}
```
- **Response**:
```json
{
  "message": "Password reset successfully"
}
```

## 2. User Profile APIs

### 2.1 Get User Profile
- **URL**: `/profile/profile`
- **Method**: GET
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "User profile retrieved",
  "user": {
    "FirstName": "John",
    "LastName": "Doe",
    "Email": "john@example.com",
    "userType": "normal",
    "walletBalance": 0,
    "coins": 0,
    "upiId": "",
    "subscriptionStatus": false
  }
}
```

### 2.2 Update User Profile
- **URL**: `/profile/profile`
- **Method**: PUT
- **Headers**: Authorization: Bearer {token}
- **Request Body**:
```json
{
  "FirstName": "John",
  "LastName": "Smith",
  "upiId": "john@upi"
}
```
- **Response**:
```json
{
  "message": "Profile updated successfully",
  "user": {
    "FirstName": "John",
    "LastName": "Smith",
    "Email": "john@example.com",
    "upiId": "john@upi",
    "userType": "normal"
  }
}
```

### 2.3 Become a Creator
- **URL**: `/profile/become-creator`
- **Method**: PUT
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "You are now a creator!",
  "user": {
    "FirstName": "John",
    "LastName": "Doe",
    "Email": "john@example.com",
    "userType": "creator"
  }
}
```

### 2.4 Get Wallet Details
- **URL**: `/profile/wallet`
- **Method**: GET
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "Wallet details retrieved",
  "wallet": {
    "coins": 150,
    "walletBalance": 0
  },
  "recentTransactions": [
    {
      "type": "subscription",
      "amount": 199,
      "coins": 150,
      "status": "completed",
      "createdAt": "2023-05-25T14:30:00.000Z"
    }
  ]
}
```

### 2.5 Get Subscription Details
- **URL**: `/profile/subscription`
- **Method**: GET
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "Subscription details retrieved",
  "subscription": {
    "active": true,
    "expiryDate": "2023-06-25T14:30:00.000Z",
    "subscriptionId": "sub_123456"
  }
}
```

## 3. Payments APIs

### 3.1 Create Subscription Order
- **URL**: `/payments/create-subscription`
- **Method**: POST
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "Subscription order created",
  "orderId": "order_123456",
  "amount": 199,
  "key": "razorpay_key_id"
}
```

### 3.2 Verify Subscription Payment
- **URL**: `/payments/verify-subscription`
- **Method**: POST
- **Headers**: Authorization: Bearer {token}
- **Request Body**:
```json
{
  "razorpay_payment_id": "pay_123456",
  "razorpay_order_id": "order_123456",
  "razorpay_signature": "signature"
}
```
- **Response**:
```json
{
  "message": "Subscription activated successfully",
  "coinsAdded": 150,
  "expiryDate": "2023-06-25T14:30:00.000Z"
}
```

### 3.3 Recharge Wallet (Any User)
- **URL**: `/payments/recharge-wallet`
- **Method**: POST
- **Headers**: Authorization: Bearer {token}
- **Request Body**:
```json
{
  "amount": 100
}
```
- **Response**:
```json
{
  "message": "Recharge order created",
  "orderId": "order_123456",
  "amount": 100,
  "coins": 100,
  "key": "razorpay_key_id"
}
```

**Note**: Recharging wallet will automatically convert a normal user to a creator.

### 3.4 Verify Wallet Recharge
- **URL**: `/payments/verify-recharge`
- **Method**: POST
- **Headers**: Authorization: Bearer {token}
- **Request Body**:
```json
{
  "razorpay_payment_id": "pay_123456",
  "razorpay_order_id": "order_123456",
  "razorpay_signature": "signature",
  "amount": 100
}
```
- **Response**:
```json
{
  "message": "Wallet recharged successfully",
  "coinsAdded": 100,
  "becameCreator": true
}
```

**Note**: The `becameCreator` field will be `true` if the user was converted from normal to creator status as part of this transaction.

### 3.5 Request Payment Withdrawal
- **URL**: `/payments/request-withdrawal`
- **Method**: POST
- **Headers**: Authorization: Bearer {token}
- **Request Body**:
```json
{
  "coins": 100,
  "upiId": "user@upi"
}
```
- **Response**:
```json
{
  "message": "Withdrawal request submitted successfully",
  "requestId": "request_id"
}
```

### 3.6 Get Transaction History
- **URL**: `/payments/transaction-history`
- **Method**: GET
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "Transaction history retrieved",
  "transactions": [
    {
      "type": "subscription",
      "amount": 199,
      "coins": 150,
      "status": "completed",
      "createdAt": "2023-05-25T14:30:00.000Z"
    }
  ]
}
```

### 3.7 Get Withdrawal History
- **URL**: `/payments/withdrawal-history`
- **Method**: GET
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "Withdrawal history retrieved",
  "withdrawals": [
    {
      "coins": 100,
      "amount": 100,
      "status": "pending",
      "upiId": "user@upi",
      "createdAt": "2023-05-25T14:30:00.000Z"
    }
  ]
}
```

## 4. Videos APIs

### 4.1 Add New Video (Any User)
- **URL**: `/videos/add`
- **Method**: POST
- **Headers**: Authorization: Bearer {token}
- **Request Body**:
```json
{
  "youtubeUrl": "https://www.youtube.com/watch?v=abc123",
  "title": "My Awesome Video",
  "budget": 100,
  "coinsPerView": 2
}
```
- **Response**:
```json
{
  "message": "Video added successfully",
  "video": {
    "creatorId": "user_id",
    "youtubeUrl": "https://www.youtube.com/watch?v=abc123",
    "title": "My Awesome Video",
    "budget": 100,
    "coinsPerView": 2,
    "totalViews": 0,
    "totalCoinsSpent": 0,
    "active": true
  }
}
```

**Note**: Any user with sufficient coins can add videos and distribute rewards.

### 4.2 Get User's Videos
- **URL**: `/videos/user-videos`
- **Method**: GET
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "Videos retrieved successfully",
  "videos": [
    {
      "youtubeUrl": "https://www.youtube.com/watch?v=abc123",
      "title": "My Awesome Video",
      "budget": 100,
      "coinsPerView": 2,
      "totalViews": 5,
      "totalCoinsSpent": 10,
      "active": true
    }
  ]
}
```

### 4.3 Update Video Status
- **URL**: `/videos/update/:videoId`
- **Method**: PUT
- **Headers**: Authorization: Bearer {token}
- **Request Body**:
```json
{
  "active": false
}
```
- **Response**:
```json
{
  "message": "Video updated successfully",
  "video": {
    "youtubeUrl": "https://www.youtube.com/watch?v=abc123",
    "title": "My Awesome Video",
    "budget": 100,
    "coinsPerView": 2,
    "active": false
  }
}
```

### 4.4 Get Available Videos to Watch
- **URL**: `/videos/available`
- **Method**: GET
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "Available videos retrieved",
  "videos": [
    {
      "youtubeUrl": "https://www.youtube.com/watch?v=abc123",
      "title": "My Awesome Video",
      "budget": 100,
      "coinsPerView": 2,
      "totalViews": 5
    }
  ]
}
```

### 4.5 Record Video View and Earn Coins
- **URL**: `/videos/view/:videoId`
- **Method**: POST
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "Video viewed successfully",
  "coinsEarned": 2
}
```

### 4.6 Get Top Creators
- **URL**: `/videos/top-creators`
- **Method**: GET
- **Headers**: Authorization: Bearer {token}
- **Response**:
```json
{
  "message": "Top creators retrieved",
  "topCreators": [
    {
      "creatorId": "user_id",
      "name": "John Doe",
      "totalBudget": 500
    }
  ]
}
```

## 5. Admin APIs

### 5.1 Get Subscribed Users
- **URL**: `/admin/subscriptions`
- **Method**: GET
- **Headers**: Authorization: Bearer {token} (Admin only)
- **Response**:
```json
{
  "message": "Subscribed users retrieved",
  "subscribedUsers": [
    {
      "FirstName": "John",
      "LastName": "Doe",
      "Email": "john@example.com",
      "subscriptionStatus": true,
      "subscriptionExpiry": "2023-06-25T14:30:00.000Z"
    }
  ],
  "count": 1
}
```

### 5.2 Get User Wallet Information
- **URL**: `/admin/wallets`
- **Method**: GET
- **Headers**: Authorization: Bearer {token} (Admin only)
- **Response**:
```json
{
  "message": "User wallet information retrieved",
  "users": [
    {
      "FirstName": "John",
      "LastName": "Doe",
      "Email": "john@example.com",
      "userType": "creator",
      "coins": 150,
      "walletBalance": 0
    }
  ],
  "count": 1
}
```

### 5.3 Get Payment Requests
- **URL**: `/admin/payment-requests?status=pending`
- **Method**: GET
- **Headers**: Authorization: Bearer {token} (Admin only)
- **Query Parameters**: status (pending, approved, rejected)
- **Response**:
```json
{
  "message": "pending payment requests retrieved",
  "paymentRequests": [
    {
      "userId": {
        "FirstName": "John",
        "LastName": "Doe",
        "Email": "john@example.com"
      },
      "upiId": "john@upi",
      "coins": 100,
      "amount": 100,
      "status": "pending",
      "createdAt": "2023-05-25T14:30:00.000Z"
    }
  ],
  "count": 1
}
```

### 5.4 Process Payment Request
- **URL**: `/admin/payment-requests/:requestId`
- **Method**: PUT
- **Headers**: Authorization: Bearer {token} (Admin only)
- **Request Body**:
```json
{
  "status": "approved",
  "note": "Payment processed via UPI"
}
```
- **Response**:
```json
{
  "message": "Payment request approved",
  "paymentRequest": {
    "userId": "user_id",
    "upiId": "john@upi",
    "coins": 100,
    "amount": 100,
    "status": "approved",
    "note": "Payment processed via UPI",
    "processedAt": "2023-05-26T14:30:00.000Z"
  }
}
```

### 5.5 Get Platform Statistics
- **URL**: `/admin/statistics`
- **Method**: GET
- **Headers**: Authorization: Bearer {token} (Admin only)
- **Response**:
```json
{
  "message": "Platform statistics retrieved",
  "statistics": {
    "users": {
      "total": 50,
      "creators": 10,
      "normalUsers": 40,
      "activeSubscribers": 15
    },
    "videos": {
      "total": 100,
      "active": 80
    },
    "financials": {
      "subscriptionRevenue": 2985,
      "rechargeRevenue": 5000,
      "pendingPayments": 1200
    }
  }
}
```

### 5.6 Update User Type
- **URL**: `/admin/users/:userId/type`
- **Method**: PUT
- **Headers**: Authorization: Bearer {token} (Admin only)
- **Request Body**:
```json
{
  "userType": "creator"
}
```
- **Response**:
```json
{
  "message": "User type updated successfully",
  "user": {
    "id": "user_id",
    "FirstName": "John",
    "LastName": "Doe",
    "Email": "john@example.com",
    "userType": "creator"
  }
}
```
